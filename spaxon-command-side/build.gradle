buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

group = 'spaxon'

apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

repositories {
	mavenCentral()
}

jar {
    baseName = 'spaxon-command-side'
    archiveName = 'spaxon-command-side.jar'
}

configurations{
    compile.exclude module: "spring-boot-starter-tomcat"
}


dependencies {
    compile project(':spaxon-common-things')
    compile("org.axonframework:axon-amqp:3.0.5")
    compile("org.axonframework:axon-mongo:3.0.5")
    compile("org.axonframework:axon-spring-boot-starter:3.0.5")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
    compile("org.springframework.retry:spring-retry")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.axonframework:axon-test:3.0.5")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}

task image(type: Docker, dependsOn: build){
	push = false
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst{
		copy {
			from jar
			into stageDir
		}
	}
}